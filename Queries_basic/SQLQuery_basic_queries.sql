use [AdventureWorks]

--SELECT ALL COLUMNS WITH *
SELECT * FROM [HumanResources].[Department]
--show me all the dep names 
SELECT NAME FROM [HumanResources].[Department]
--same for groupnames
SELECT GROUPNAME FROM [HumanResources].[Department]


--NOTICE FROM GROUPNAME SOME ARE REPEATED AS OTHER COLUMN CHANGES
--SHOW ME ONLY DISTINCT
SELECT DISTINCT GROUPNAME FROM [HumanResources].[Department]

--SELECT ALL DEPARTMENTS WITH FILTERING THAT ARE IN THE MANUFACTURING GROUP
SELECT NAME, GROUPNAME FROM [HumanResources].[Department]
WHERE GROUPNAME LIKE 'MANUFACTURING'

--ALL EMPLOYEES FROM THE EMPLOYEE TABLE
SELECT * FROM [HumanResources].[Employee]

--GIVE ME LIST OF ALL EMPLOYEES WITH ORG LEVEL 2 (HIERACH)
SELECT * FROM [HumanResources].[Employee] WHERE OrganizationLevel = 2

--NOW ORG LEVEL 2 OR 3 USING IN
SELECT * FROM [HumanResources].[Employee] WHERE OrganizationLevel IN (2,3)

-- GIVE A LIST OF THE Accounts MANAGERS
SELECT * FROM [HumanResources].[Employee] WHERE JOBTITLE LIKE 'Accounts Manager'

-- ABOVE WAS AN EXACT MATCH ON THE STRING (NOT CASE SENSITIVE)
-- WHAT IF WE WANT ALL KIDS OF TITLES ENDING IN MANAGER
-- USE A WILDCARD % (IF BEFORE THEN ANYTHING CAN COME BEFORE - PATTERN MATCHING)
SELECT * FROM [HumanResources].[Employee] WHERE JOBTITLE LIKE '%Manager'
SELECT * FROM [HumanResources].[Employee] WHERE JOBTITLE LIKE '%CONTROL%'


-- TAKING FILTERING A STEP FURTHER LETS TALK ABOUT DATES

-- DATE FILTERING
SELECT * FROM [HumanResources].[Employee] WHERE BirthDate > '1/1/1980'
SELECT * FROM [HumanResources].[Employee] WHERE BirthDate BETWEEN '1/1/1970' AND '1/1/1980'
SELECT * FROM [HumanResources].[Employee] WHERE BirthDate < '1/1/1970' OR BirthDate > '1/1/1980'


-- MORE QUERIES

-- CALCULATED COLUMNS USING PRODUCTION PRODUCT
SELECT * FROM [Production].[Product]
SELECT NAME, LISTPRICE FROM [Production].[Product]
-- LETS CALL A COLUMN WE CREATE FROM LISTPRICE
SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE FROM [Production].[Product]

-- HOW ABOUT MAKING A NEW TABLE FROM THE EXISTING TABLE
-- STORE THE ABOVE QUERY USING AN INTO CLAUSE
-- THIS WILL GO INTO THE ADVENTUREWORKS ENV AS ITS SELECTED
-- REFRESH YOU TABLES TO SEE THIS TABLE
SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE INTO [Production].[Product_2] FROM [Production].[Product]

-- WE JUST CREATED A PERMANENT TABLE AND WILL BE STORED IN THE DATABASE
-- IF WE WERE TO HAVE MADE A TEMP TABLE WHICH WILL VANISH AFTER THE SESSION
SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE INTO #temptab FROM [Production].[Product]
-- THE TEMPTAB ONLY EXISTS IN THE CURRENT QUERY - NOWHERE ELSE...


-- DELETING DATA FROM A TABLE - ONLY 1 ROW AFFECTED
DELETE FROM [Production].[Product_2]
WHERE NAME LIKE 'BEARING BALL'


-- UPDATE STATEMENT FOR OUR TABLES / ONLY USE LIKE IF MATCHING
-- USE = TO SET A NEW VALUE
UPDATE [Production].[Product_2]
SET NAME = 'BLADE_NEW' WHERE NAME LIKE 'BLADE'